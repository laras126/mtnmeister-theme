
// Rotating color blocks
@mixin rotate($text: $rotate-text, $bkgd: $rotate-bkgd, $link-clr: $accent-med) {
    background-color: $bkgd;
    color: $text;

    // TODO: Maybe add to holding?
    // Need a more elegant way to remove link styles

    a,
    a:visited{
      color: $link-clr;
    }

    a:hover {
  		color: darken($link-clr, 20%);
    }
}




// ----
// Media Queries
// ----

// http://css-tricks.com/conditional-media-query-mixins/
$MQs: true;

@mixin bp($point) {
	@if ($MQs) {
		$bp-xs: "(min-width: #{$screen-xs})";
		$bp-sm: "(min-width: #{$screen-sm})";
		$bp-md: "(min-width: #{$screen-md})";
		$bp-lg: "(min-width: #{$screen-lg})";
		$bp-xl: "(min-width: #{$screen-xl})";

		@if $point == xs {
			@media #{$bp-xs} { @content; }
		}
		@else if $point == small {
			@media #{$bp-sm} { @content; }
		}
		@else if $point == med {
			@media #{$bp-md} { @content; }
		}
		@else if $point == large {
			@media #{$bp-lg} { @content; }
		}
		@else if $point == xl {
			@media #{$bp-xl} { @content; }
		}
	}
}



// ----
// Misc
// ----

@mixin clearfix() {
	&:before,
    &:after {
        content: " "; // 1
        display: table; // 2
    }
    &:after {
	   clear: both;
    }
}


// ----
// Layout
// ----


// Flexbox Layout

$sizes: (
  full:   100%,
  half:   50%,
  third:  33.333333%,
  fourth: 25%,
  sixth:  16.66666667%
);

$gutter: $base;

@mixin cell($size: false) {

  @if $size != false {
      flex: 0 0 map-get($sizes, $size);
      max-width: map-get($sizes, $size); // Fix for Firefox
  }
}

@mixin grid($guttered: true, $wrap: nowrap) {
  display: flex;
  flex-wrap: $wrap;

  @if $guttered {
    & > * {
      padding-left: $gutter/2;
      padding-right: $gutter/2;
    }
    margin-left: -$gutter/2;
    margin-right: -$gutter/2;
  }
}

.grid {
  @include grid;
}

.cell-sixth {
  @include cell(sixth);
}

.cell-fourth {
  @include cell(fourth);
}

.cell-third {
  @include cell(third);
}

.cell-half {
  @include cell(half);
}

.cell-full {
  @include cell(full);
}

